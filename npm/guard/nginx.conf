events {}

http {
  # Pi-hole on .51; adjust if different
  resolver 192.168.2.51 valid=30s ipv6=off;
  map $http_upgrade $connection_upgrade { default upgrade; '' close; }

  server {
    listen 3000;
    server_name npm.pizza;

    # 1) Auth check with Authentik nginx outpost
    location = /ak_auth {
      proxy_pass https://saml.lab/outpost.goauthentik.io/auth/nginx;
      proxy_ssl_server_name on;
      proxy_ssl_verify off;  # turn ON once the container trusts your internal CA
      proxy_set_header X-Original-URL    $scheme://$http_host$request_uri;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host  $host;
      proxy_set_header X-Forwarded-Uri   $request_uri;
    }

    # 2) Unauthed -> Authentik login
    error_page 401 = @ak_start;
    location @ak_start {
      return 302 https://saml.lab/outpost.goauthentik.io/start?rd=$scheme://$http_host$request_uri;
    }

    # 3) Protect everything (e.g., NPM Admin) behind auth_request
    location / {
      auth_request /ak_auth;

      # Optional identity headers
      auth_request_set $ak_user  $upstream_http_x_authentik_username;
      auth_request_set $ak_email $upstream_http_x_authentik_email;
      proxy_set_header X-Authentik-Username $ak_user;
      proxy_set_header X-Authentik-Email    $ak_email;

      # Forward to NPM admin (usually running on the NPM host at :81)
      proxy_pass http://127.0.0.1:81;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }
  }
}
